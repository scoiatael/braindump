<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rants on Scoiatael&#39;s braindump</title>
    <link>https://bd.scoiatael.dev/rants/</link>
    <description>Recent content in Rants on Scoiatael&#39;s braindump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jan 2020 21:39:00 +0100</lastBuildDate>
    
	<atom:link href="https://bd.scoiatael.dev/rants/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>State of Python tooling</title>
      <link>https://bd.scoiatael.dev/rants/state-of-python-tooling/</link>
      <pubDate>Sun, 19 Jan 2020 21:39:00 +0100</pubDate>
      
      <guid>https://bd.scoiatael.dev/rants/state-of-python-tooling/</guid>
      <description>Recently I joined a team working mostly in Python. As usual, one of the first steps is getting development environment for the projects up and running. The first part was quick and easy: download a couple of config files &amp;amp; secrets, docker-compose up and we are up and running.
Then came the hard part: getting local Python environment running for tests and code-completion.
Preface I&#39;m a big fan of direnv - having single .</description>
    </item>
    
    <item>
      <title>Software architecture</title>
      <link>https://bd.scoiatael.dev/rants/software-architecture/</link>
      <pubDate>Tue, 07 Jan 2020 14:46:00 +0100</pubDate>
      
      <guid>https://bd.scoiatael.dev/rants/software-architecture/</guid>
      <description>Recently I began to wonder why is building software that interesting? I quite enjoy computer and tabletop games, and somehow simply building software seems to be at least as challenging and in turn rewarding.
The obvious answer: joy of creation Though I haven&#39;t done any research in that area, I&#39;m quite sure that in general people like creating - and by that expressing themselves, and losing themselves in the process. It seems a bit far-fetched to compare painting to writing code.</description>
    </item>
    
    <item>
      <title>Things Puppet won&#39;t tell you about Deferred</title>
      <link>https://bd.scoiatael.dev/rants/puppet-deferred/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bd.scoiatael.dev/rants/puppet-deferred/</guid>
      <description>You might&#39;ve heard about one of Puppet 6&#39;s freshfeatures: Deferred. It basically allows you to run code on agent during execution, instead of only on master during compilation.
It&#39;s awesome for many reasons; you can:
 retrieve secrets on agents, implement lazy execution and macros,  But it has one big problem. Let me show what&#39;s wrong.
Usage Try writing an example code with Deferred:
# manifest.pp$args = { now_on_master =&amp;gt; new(TimeStamp), shadow_contents =&amp;gt; Deferred(&amp;#39;file&amp;#39;, [&amp;#39;/etc/puppet_time.</description>
    </item>
    
  </channel>
</rss>